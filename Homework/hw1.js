//Program to remove leading and trailing zeros from an input string
//example: "230.500" -> "230.5"
//example: "00402" -> "402"
//example: "03.1600" -> "3.16"
//example: "00.00" -> "0"

const rl = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  }); 

var number;

function trimzero (str) {
    if (str == "00.00") {
        return "0";
    }
    return str.trim().replace(/^0+|0+$/g,'').replace(/\.$/g,'');
}
rl.question('Enter a string: ', (answer) => {
    number = answer;
    console.log("The input string is " + number + " output is " + trimzero(number));
    rl.close();
});



/*
ฟังก์ชัน `trimzero` มีไว้เพื่อตัดเลข 0 ที่ไม่จำเป็นออกจากสตริงตัวเลขที่กำหนดให้ โดยใช้ Regular Expression (Regex) เพื่อดำเนินการตามขั้นตอนต่อไปนี้:

1. `str.trim()`: นำสตริง `str` มาตัดช่องว่างด้านหน้าและด้านหลังออก เพื่อให้แน่ใจว่าไม่มีช่องว่างเกินไปก่อนหรือหลังสตริงที่ต้องการตรวจสอบ.

2. `replace(/^0+|0+$/g, '')`: ใช้ Regex ในการแทนที่ข้อมูลในสตริง `str` ที่มีลักษณะตามเงื่อนไขดังนี้
   - `^0+`: แทนที่เลข 0 ที่อยู่ที่จุดเริ่มต้นของสตริง
   - `|`: หรือ (OR)
   - `0+$`: แทนที่เลข 0 ที่อยู่ที่จุดสิ้นสุดของสตริง

   การใช้ `^` และ `$` ใน Regex หมายความว่าต้องตรงกับตัวอักษรที่อยู่ที่จุดเริ่มต้นและจุดสิ้นสุดของสตริง ซึ่งในกรณีนี้คือตัวเลข 0 เพื่อให้เกิดการตัดเลข 0 
   ที่เป็นส่วนหน้าและส่วนท้ายของสตริงออก

3. `replace(/\.$/g, '')`: ใช้ Regex อีกครั้งเพื่อแทนที่ข้อมูลในสตริง `str` ที่มีลักษณะดังนี้
   - `\.`: แทนที่เครื่องหมายจุดทศนิยม
   - `$`: แทนที่ตัวเครื่องหมายจุดทศนิยมที่อยู่ที่จุดสิ้นสุดของสตริง

   การใช้ `$` ใน Regex หมายความว่าต้องตรงกับตัวอักษรที่อยู่ที่จุดสิ้นสุดของสตริง เพื่อให้เกิดการตัดเครื่องหมายจุดทศนิยมออก

สรุปคือ การใช้ Regex ในฟังก์ชัน `trimzero` ทำให้เกิดการตัดเลข 0 ที่ไม่จำเป็นออกจากตัวเลขที่กำหนดให้ในสตริง ซึ่งสามารถตัดเลข 0 
ที่อยู่ที่ต้นและท้ายของสตริง และตัวเครื่องหมายจุดทศนิยมที่อยู่ที่จุดสิ้นสุดของสตริงออกได้ ทำให้สตริงที่ได้นั้นเหลือเฉพาะตัวเลขที่ไม่มีเลข 0 
ไม่จำเป็นนำหน้าหรือท้ายสตริง โดยถ้าสตริงที่ได้เป็น "00.00" จะถูกแทนที่ด้วย "0" แต่ถ้าสตริงที่ได้เป็น "0001.200" จะถูกแทนที่ด้วย "1.2" 
หรือถ้าสตริงที่ได้เป็น "02000.00000" จะถูกแทนที่ด้วย "2" ซึ่งเป็นผลลัพธ์ที่ต้องการของฟังก์ชันนี้

*/